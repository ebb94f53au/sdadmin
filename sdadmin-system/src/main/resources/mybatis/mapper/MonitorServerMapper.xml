<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sd.modules.monitor.mapper.MonitorServerMapper">
  <resultMap id="BaseResultMap" type="com.sd.modules.monitor.domain.MonitorServer">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="cpu_core" jdbcType="INTEGER" property="cpuCore" />
    <result column="cpu_rate" jdbcType="DOUBLE" property="cpuRate" />
    <result column="disk_total" jdbcType="DOUBLE" property="diskTotal" />
    <result column="disk_used" jdbcType="DOUBLE" property="diskUsed" />
    <result column="mem_total" jdbcType="DOUBLE" property="memTotal" />
    <result column="mem_used" jdbcType="DOUBLE" property="memUsed" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="swap_total" jdbcType="DOUBLE" property="swapTotal" />
    <result column="swap_used" jdbcType="DOUBLE" property="swapUsed" />
    <result column="address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, cpu_core, cpu_rate, disk_total, disk_used, mem_total, mem_used, name, port, sort, 
    state, swap_total, swap_used, address
  </sql>
  <select id="selectByExample" parameterType="com.sd.modules.monitor.domain.MonitorServerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from monitor_server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from monitor_server
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from monitor_server
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.sd.modules.monitor.domain.MonitorServerExample">
    delete from monitor_server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sd.modules.monitor.domain.MonitorServer">
    insert into monitor_server (id, cpu_core, cpu_rate, 
      disk_total, disk_used, mem_total, 
      mem_used, name, port, 
      sort, state, swap_total, 
      swap_used, address)
    values (#{id,jdbcType=INTEGER}, #{cpuCore,jdbcType=INTEGER}, #{cpuRate,jdbcType=DOUBLE}, 
      #{diskTotal,jdbcType=DOUBLE}, #{diskUsed,jdbcType=DOUBLE}, #{memTotal,jdbcType=DOUBLE}, 
      #{memUsed,jdbcType=DOUBLE}, #{name,jdbcType=VARCHAR}, #{port,jdbcType=INTEGER}, 
      #{sort,jdbcType=INTEGER}, #{state,jdbcType=VARCHAR}, #{swapTotal,jdbcType=DOUBLE}, 
      #{swapUsed,jdbcType=DOUBLE}, #{address,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.sd.modules.monitor.domain.MonitorServer">
    insert into monitor_server
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="cpuCore != null">
        cpu_core,
      </if>
      <if test="cpuRate != null">
        cpu_rate,
      </if>
      <if test="diskTotal != null">
        disk_total,
      </if>
      <if test="diskUsed != null">
        disk_used,
      </if>
      <if test="memTotal != null">
        mem_total,
      </if>
      <if test="memUsed != null">
        mem_used,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="sort != null">
        sort,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="swapTotal != null">
        swap_total,
      </if>
      <if test="swapUsed != null">
        swap_used,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="cpuCore != null">
        #{cpuCore,jdbcType=INTEGER},
      </if>
      <if test="cpuRate != null">
        #{cpuRate,jdbcType=DOUBLE},
      </if>
      <if test="diskTotal != null">
        #{diskTotal,jdbcType=DOUBLE},
      </if>
      <if test="diskUsed != null">
        #{diskUsed,jdbcType=DOUBLE},
      </if>
      <if test="memTotal != null">
        #{memTotal,jdbcType=DOUBLE},
      </if>
      <if test="memUsed != null">
        #{memUsed,jdbcType=DOUBLE},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="swapTotal != null">
        #{swapTotal,jdbcType=DOUBLE},
      </if>
      <if test="swapUsed != null">
        #{swapUsed,jdbcType=DOUBLE},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sd.modules.monitor.domain.MonitorServerExample" resultType="java.lang.Long">
    select count(*) from monitor_server
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update monitor_server
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.cpuCore != null">
        cpu_core = #{record.cpuCore,jdbcType=INTEGER},
      </if>
      <if test="record.cpuRate != null">
        cpu_rate = #{record.cpuRate,jdbcType=DOUBLE},
      </if>
      <if test="record.diskTotal != null">
        disk_total = #{record.diskTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.diskUsed != null">
        disk_used = #{record.diskUsed,jdbcType=DOUBLE},
      </if>
      <if test="record.memTotal != null">
        mem_total = #{record.memTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.memUsed != null">
        mem_used = #{record.memUsed,jdbcType=DOUBLE},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null">
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.sort != null">
        sort = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.swapTotal != null">
        swap_total = #{record.swapTotal,jdbcType=DOUBLE},
      </if>
      <if test="record.swapUsed != null">
        swap_used = #{record.swapUsed,jdbcType=DOUBLE},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update monitor_server
    set id = #{record.id,jdbcType=INTEGER},
      cpu_core = #{record.cpuCore,jdbcType=INTEGER},
      cpu_rate = #{record.cpuRate,jdbcType=DOUBLE},
      disk_total = #{record.diskTotal,jdbcType=DOUBLE},
      disk_used = #{record.diskUsed,jdbcType=DOUBLE},
      mem_total = #{record.memTotal,jdbcType=DOUBLE},
      mem_used = #{record.memUsed,jdbcType=DOUBLE},
      name = #{record.name,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      sort = #{record.sort,jdbcType=INTEGER},
      state = #{record.state,jdbcType=VARCHAR},
      swap_total = #{record.swapTotal,jdbcType=DOUBLE},
      swap_used = #{record.swapUsed,jdbcType=DOUBLE},
      address = #{record.address,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sd.modules.monitor.domain.MonitorServer">
    update monitor_server
    <set>
      <if test="cpuCore != null">
        cpu_core = #{cpuCore,jdbcType=INTEGER},
      </if>
      <if test="cpuRate != null">
        cpu_rate = #{cpuRate,jdbcType=DOUBLE},
      </if>
      <if test="diskTotal != null">
        disk_total = #{diskTotal,jdbcType=DOUBLE},
      </if>
      <if test="diskUsed != null">
        disk_used = #{diskUsed,jdbcType=DOUBLE},
      </if>
      <if test="memTotal != null">
        mem_total = #{memTotal,jdbcType=DOUBLE},
      </if>
      <if test="memUsed != null">
        mem_used = #{memUsed,jdbcType=DOUBLE},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="swapTotal != null">
        swap_total = #{swapTotal,jdbcType=DOUBLE},
      </if>
      <if test="swapUsed != null">
        swap_used = #{swapUsed,jdbcType=DOUBLE},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sd.modules.monitor.domain.MonitorServer">
    update monitor_server
    set cpu_core = #{cpuCore,jdbcType=INTEGER},
      cpu_rate = #{cpuRate,jdbcType=DOUBLE},
      disk_total = #{diskTotal,jdbcType=DOUBLE},
      disk_used = #{diskUsed,jdbcType=DOUBLE},
      mem_total = #{memTotal,jdbcType=DOUBLE},
      mem_used = #{memUsed,jdbcType=DOUBLE},
      name = #{name,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
      state = #{state,jdbcType=VARCHAR},
      swap_total = #{swapTotal,jdbcType=DOUBLE},
      swap_used = #{swapUsed,jdbcType=DOUBLE},
      address = #{address,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>